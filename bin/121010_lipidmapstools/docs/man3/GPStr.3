.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GPSTR 1"
.TH GPSTR 1 "2012-09-04" "perl v5.10.1" "LipidMAPSTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GPStr \- Glycerolipids (GP) structure generation methods
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use GPStr;
.PP
use GPStr qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
GPStr module provides these methods:
.PP
.Vb 12
\&    GenerateCmpdOntologyData \- Generate ontology data
\&    GenerateCmpdOntologySDDataLines \- Generate ontology data lines for SD file
\&    GenerateGPChainStrData \- Generate chain structure data
\&    GenerateSDFile \- Generate SD file
\&    GetGPTemplatesData \- Get templates data
\&    GetGPSupportedHeadGroupMap \- Get supported headgroups data
\&    GetGPTemplateID \- Get templates ID
\&    IsGPChainsAbbrevSupported \- Is it a supported GP abbreviation
\&    ParseGPAbbrev \- Parse GP abbreviation
\&    ProcessGPCmpdAbbrevs \- Process GP abbreviation
\&    SetupGPCmpdAbbrevTemplateDataMap \- Setup template structure data map
\&    ValidateGPAbbrev \- Validate GP abbreviation
.Ve
.SH "METHODS"
.IX Header "METHODS"
.IP "\fBGenerateCmpdOntologyData\fR" 4
.IX Item "GenerateCmpdOntologyData"
.Vb 1
\&    $DataHashRef = GenerateCmpdOntologyData($CmpDataRef);
.Ve
.Sp
Return a reference to a hash containing ontology data with hash keys and values
corresponding to property names and values.
.IP "\fBGenerateCmpdOntologySDDataLines\fR" 4
.IX Item "GenerateCmpdOntologySDDataLines"
.Vb 1
\&    $DataLinesArrayRef = GenerateCmpdOntologySDDataLines($CmpdDataRef);
.Ve
.Sp
Return a reference to an array containing ontology data lines suitable for
generate \s-1SD\s0 file data block.
.IP "\fBGenerateGPChainStrData\fR" 4
.IX Item "GenerateGPChainStrData"
.Vb 2
\&    ($AtomLinesArrayRef, $BondLinesArrayRef) =
\&       GenerateGPChainStrData($ChainType, $CmpdDataRef);
.Ve
.Sp
Return array references containing atom and bond data lines for \s-1SD\s0 file. Appropriate atom
and bond data lines are generated using chain type and abbreviation template data.
.IP "\fBGenerateSDFile\fR" 4
.IX Item "GenerateSDFile"
.Vb 1
\&    GenerateSDFile($SDFileName, $CmdAbbrevsRef);
.Ve
.Sp
Generate a \s-1SD\s0 file for compound abbreviations. Structure data for specified abbreviation
is generated sequentially and written to \s-1SD\s0 file.
.IP "\fBGetGPTemplatesData\fR" 4
.IX Item "GetGPTemplatesData"
.Vb 1
\&    $TemplatesDataRef = GetGPTemplatesData();
.Ve
.Sp
Return a reference to a hash containing \s-1GP\s0 templates data
.IP "\fBGetGPSupportedHeadGroupMap\fR" 4
.IX Item "GetGPSupportedHeadGroupMap"
.Vb 1
\&    $SupportedHeadGroupDataRef = GetGPSupportedHeadGroupMap();
.Ve
.Sp
Return a reference to a hash containing supported head groups data.
.IP "\fBGetGPTemplateID\fR" 4
.IX Item "GetGPTemplateID"
.Vb 1
\&    $HeadGroupID = GetGPTemplateID($HeadGroupAbbrev, $ChainsAbbrev);
.Ve
.Sp
Return a supported template \s-1ID\s0 for compound abbreviation.
.IP "\fBIsGPChainsAbbrevSupported\fR" 4
.IX Item "IsGPChainsAbbrevSupported"
.Vb 1
\&    $Status = IsGPChainsAbbrevSupported($Abbrev, $PrintWarning);
.Ve
.Sp
Return 1 or 0 based on whether \s-1GP\s0 abbreviated is supported. For unsupported \s-1GP\s0 abbreviations,
a warning is printed unless PrintWarning flag is set.
.IP "\fBParseGPAbbrev\fR" 4
.IX Item "ParseGPAbbrev"
.Vb 2
\&    ($HeadGroup, $ChainsAbbrev, $AbbrevModifier) =
\&       ParseGPAbbrev($Abbrev);
.Ve
.Sp
Parse \s-1GP\s0 abbreviation and return these values: HeadGroup, ChainsAbbrev,
AbbrevModifier.
.IP "\fBProcessGPCmpdAbbrevs\fR" 4
.IX Item "ProcessGPCmpdAbbrevs"
.Vb 2
\&    ProcessGPCmpdAbbrevs($CmpdAbbrevsRef, $AllowArbitraryChainAbbrev,
\&                         $WriteSDFile, $SDFileName);
.Ve
.Sp
Process specified \s-1GP\s0 abbreviations to generate structures and write them out either
a \s-1SD\s0 file or simply report number of valid abbreviations.
.IP "\fBSetupGPCmpdAbbrevTemplateDataMap\fR" 4
.IX Item "SetupGPCmpdAbbrevTemplateDataMap"
.Vb 2
\&    $AbbrevTemplateDataMapRef =
\&       SetupGPCmpdAbbrevTemplateDataMap($Abbrev);
.Ve
.Sp
Return a reference to a hash containing template data for compound abbreviation. The
template data is used to generate \s-1SD\s0 file for compound abbreviation.
.IP "\fBValidateGPAbbrev\fR" 4
.IX Item "ValidateGPAbbrev"
.Vb 1
\&    $Status = ValidateGPAbbrev($Abbrev);
.Ve
.Sp
Return 1 or 0 based on whether a \s-1GP\s0 abbreviation is valid.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud
.SH "CONTRIBUTOR"
.IX Header "CONTRIBUTOR"
Eoin Fahy
.SH "SEE ALSO"
.IX Header "SEE ALSO"
ChainAbbrev.pm, ChainStr.pm, LMAPSStr.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2006\-2012. The Regents of the University of California. All Rights Reserved.
.SH "LICENSE"
.IX Header "LICENSE"
Modified \s-1BSD\s0 License
