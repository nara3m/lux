.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GPSTRGEN 1"
.TH GPSTRGEN 1 "2012-09-04" "perl v5.10.1" "LipidMAPSTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GPStrGen.pl \- Generate structures for Glycerophospholipids (GP)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
GPStrGen.pl  GPAbbrev|GPAbbrevFileName ...
.PP
GPStrGen.pl [\fB\-c, \-\-ChainAbbrevMode\fR \fIMostLikely | Arbitrary\fR]
[\fB\-h, \-\-help\fR] [\fB\-m, \-\-mode\fR \fIAbbrev | AbbrevFileName\fR]
[\fB\-p, \-\-ProcessMode\fR \fIWriteSDFile | CountOnly\fR] [\fB\-o, \-\-overwrite\fR]
[\fB\-r, \-\-root\fR rootname] [\fB\-w, \-\-workingdir\fR dirname] <arguments>...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate Glyceriphospholipids (\s-1GP\s0) structures using compound abbreviations specified on
a command line or in a \s-1CSV/TSV\s0 Text file. All the command line arguments represent either
compound abbreviations or file name containing abbreviations. Use mode option to control
the type of command line arguments.
.PP
A \s-1SD\s0 file, containing structures for all \s-1GP\s0 abbreviations along with ontological information, is
generated as an output.
.SH "SUPPORTED ABBREVIATIONS"
.IX Header "SUPPORTED ABBREVIATIONS"
Current support for \s-1GP\s0 structure generation include these main classes and sub classes:
.PP
o Glycerophosphocholines (\s-1PC\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphocholines
\&    . 1\-alkyl,2\-acylglycerophosphocholines
\&    . 1Z\-alkenyl,2\-acylglycerophosphocholines
\&    . Dialkylglycerophosphocholines
\&    . Monoacylglycerophosphocholines
\&    . 1\-alkyl glycerophosphocholines
\&    . 1Z\-alkenylglycerophosphocholines
.Ve
.PP
o Glycerophosphoethanolamines (\s-1PE\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphoethanolamines
\&    . 1\-alkyl,2\-acylglycerophosphoethanolamines
\&    . 1Z\-alkenyl,2\-acylglycerophosphoethanolamines
\&    . Dialkylglycerophosphoethanolamines
\&    . Monoacylglycerophosphoethanolamines
\&    . 1\-alkyl glycerophosphoethanolamines
\&    . 1Z\-alkenylglycerophosphoethanolamines
.Ve
.PP
o Glycerophosphoserines (\s-1PS\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphoserines
\&    . 1\-alkyl,2\-acylglycerophosphoserines
\&    . 1Z\-alkenyl,2\-acylglycerophosphoserines
\&    . Dialkylglycerophosphoserines
\&    . Monoacylglycerophosphoserines
\&    . 1\-alkyl glycerophosphoserines
\&    . 1Z\-alkenylglycerophosphoserines
.Ve
.PP
o Glycerophosphoglycerols (\s-1PG\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphoglycerols
\&    . 1\-alkyl,2\-acylglycerophosphoglycerols
\&    . 1Z\-alkenyl,2\-acylglycerophosphoglycerols
\&    . Dialkylglycerophosphoglycerols
\&    . Monoacylglycerophosphoglycerols
\&    . 1\-alkyl glycerophosphoglycerols
\&    . 1Z\-alkenylglycerophosphoglycerols
.Ve
.PP
o Glycerophosphoglycerophosphates (\s-1PGP\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphoglycerophosphates
\&    . 1\-alkyl,2\-acylglycerophosphoglycerophosphates
\&    . 1Z\-alkenyl,2\-acylglycerophosphoglycerophosphates
\&    . Dialkylglycerophosphoglycerophosphates
\&    . Monoacylglycerophosphoglycerophosphates
\&    . 1\-alkyl glycerophosphoglycerophosphates
\&    . 1Z\-alkenylglycerophosphoglycerophosphates
.Ve
.PP
o Glycerophosphoinositols (\s-1PI\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphoinositols
\&    . 1\-alkyl,2\-acylglycerophosphoinositols
\&    . 1Z\-alkenyl,2\-acylglycerophosphoinositols
\&    . Dialkylglycerophosphoinositols
\&    . Monoacylglycerophosphoinositols
\&    . 1\-alkyl glycerophosphoinositols
\&    . 1Z\-alkenylglycerophosphoinositols
.Ve
.PP
o Glycerophosphoinositol monophosphates (\s-1PIP\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphoinositol monophosphates
\&    . 1\-alkyl,2\-acylglycerophosphoinositol monophosphates
\&    . 1Z\-alkenyl,2\-acylglycerophosphoinositol monophosphates
\&    . Dialkylglycerophosphoinositol monophosphates
\&    . Monoacylglycerophosphoinositol monophosphates
\&    . 1\-alkyl glycerophosphoinositol monophosphates
\&    . 1Z\-alkenylglycerophosphoinositol monophosphates
.Ve
.PP
o Glycerophosphates (\s-1PA\s0)
.PP
.Vb 7
\&    . Diacylglycerophosphates
\&    . 1\-alkyl,2\-acylglycerophosphates
\&    . 1Z\-alkenyl,2\-acylglycerophosphates
\&    . Dialkylglycerophosphates
\&    . Monoacylglycerophosphates
\&    . 1\-alkyl glycerophosphates
\&    . 1Z\-alkenylglycerophosphates
.Ve
.PP
o Glyceropyrophosphates (\s-1PPA\s0)
.PP
.Vb 2
\&    . Diacylglyceropyrophosphates
\&    . Monoacylglyceropyrophosphates
.Ve
.PP
o Glycerophosphonocholines (PnC)
.PP
.Vb 7
\&    . Diacylglycerophosphonocholines
\&    . 1\-alkyl,2\-acylglycerophosphonocholines
\&    . 1Z\-alkenyl,2\-acylglycerophosphonocholines
\&    . Dialkylglycerophosphonocholines
\&    . Monoacylglycerophosphonocholines
\&    . 1\-alkyl glycerophosphonocholines
\&    . 1Z\-alkenylglycerophosphonocholines
.Ve
.PP
o Glycerophosphonoethanolamines (PnE)
.PP
.Vb 7
\&    . Diacylglycerophosphonoethanolamines
\&    . 1\-alkyl,2\-acylglycerophosphonoethanolamines
\&    . 1Z\-alkenyl,2\-acylglycerophosphonoethanolamines
\&    . Dialkylglycerophosphonoethanolamines
\&    . Monoacylglycerophosphonoethanolamines
\&    . 1\-alkyl glycerophosphonoethanolamines
\&    . 1Z\-alkenylglycerophosphonoethanolamines
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c, \-\-ChainAbbrevMode\fR \fIMostLikely|Arbitrary\fR" 4
.IX Item "-c, --ChainAbbrevMode MostLikely|Arbitrary"
Specify what types of acyl chain abbreviations are allowed during processing of complete
abbreviations: allow most likely chain abbreviations containing specific double bond geometry
specifications; allow any acyl chain abbreviation with valid chain length and double bond
geometry specificatios. Possible values: \fIMostLikely or Arbitrary\fR. Default value: \fIMostLikely\fR.
.Sp
\&\fIArbitrary\fR value of \fB\-c, \-\-ChainAbbrevMode\fR option is not allowed during processing of
abbreviations containing wild cards.
.Sp
During \fIMostLikely\fR value of \fB\-c, \-\-ChainAbbrevMode\fR option, only the most likely acyl chain
abbreviations specified in ChainAbbrev.pm module are allowed. However, during \fIArbitrary\fR value
of \fB\-c, \-\-ChainAbbrevMode\fR option, any acyl chain abbreviations with valid chain length and
double bond geometry can be specified. The current release of lipidmapstools support chain
lengths from 2 to 50 as specified in ChainAbbev.pm module.
.Sp
In addition to double bond geometry specifications, valid substituents can be specified for in the acyl
chain abbreviations.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message
.IP "\fB\-m, \-\-mode\fR \fIAbbrev|AbbrevFileName\fR" 4
.IX Item "-m, --mode Abbrev|AbbrevFileName"
Controls interpretation of command line arguments. Two different methods are provided:
specify compound abbreviations or a file name containing compound abbreviations. Possible
values: \fIAbbrev or AbbrevFileName\fR. Default: \fIAbbrev\fR
.Sp
In \fIAbbrevFileName\fR mode, a single line in \s-1CSV/TSV\s0 files can contain multiple compound
abbreviations. The file extension determines delimiter used to process data lines: comma for
\&\s-1CSV\s0 and tab for \s-1TSV\s0. For files with \s-1TXT\s0 extension, only one compound abbreviation per line
is allowed.
.Sp
Wild card character, *, is also supported in compound abbreviations.
.Sp
Examples:
.Sp
.Vb 6
\&    Specific structures: PC(12:0/13:0) PC(17:1(9Z)/0:0)
\&                         PA(13:0/0:0)
\&    Specific structures: PC(O\-16:0/13:0) PC(P\-16:0/0:0)
\&    Specific possibilities: PC(21:0/22:*) PA(17:*/0:0)
\&                            PE(O\-18:0/*:*)
\&    All possibilites: *(*:*/*:*) or *(*/*)
.Ve
.Sp
With wild card character, +/\- can also be used for chain lengths to indicate even and odd lengths at
sn1/sn2/sn3 positions; additionally > and < qualifiers are also allowed to specify length
requirements. Examples:
.Sp
.Vb 3
\&    Odd and even number chains at sn1 and sn2: *(*+:*/*\-:*)
\&    Odd and even number chains at sn1 and sn2 with length longer than 10
\&       and 20: *(*+>10:*/*\->20:*)
.Ve
.Sp
Default sn2 stereochemistry is R. However, abbreviation format also supports these additional stereochemistry
specifications for sn2 position: S; U \- unknown; rac \- racemic mixture. Examples:
.Sp
.Vb 3
\&    PC(12:0/13:0)[rac]
\&    PC(17:1(9Z)/14:0)[S]
\&    PA(13:0/12:0)[U]
.Ve
.IP "\fB\-p, \-\-ProcessMode\fR \fIWriteSDFile|CountOnly\fR" 4
.IX Item "-p, --ProcessMode WriteSDFile|CountOnly"
Specify how abbreviations are processed: generate structures for specified abbreviations along
with generating a \s-1SD\s0 file or just count the number of structures corresponding to specified
abbreviations without generating any \s-1SD\s0 file. Possible values: \fIWriteSDFile or CountOnly\fR.
Default: \fIWriteSDFile\fR.
.Sp
It can take substantial amount of time for generating all the structures and writing out a \s-1SD\s0 file
for abbreviations containing wild cards. \fICountOnly\fR value of \fB\-\-ProcessMode\fR option can
be used to get a quick count of number of structures to be generated without writing out any
\&\s-1SD\s0 file.
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files
.IP "\fB\-r, \-\-root\fR \fIrootname\fR" 4
.IX Item "-r, --root rootname"
New file name is generated using the root: <Root>.sdf. Default for new file names: GPAbbrev.sdf,
<AbbrevFilenName>.sdf, or <FirstAbbrevFileName>1To<Count>.sdf.
.IP "\fB\-w, \-\-workingdir\fR \fIdirname\fR" 4
.IX Item "-w, --workingdir dirname"
Location of working directory. Default: current directory
.SH "EXAMPLES"
.IX Header "EXAMPLES"
On some systems, command line scripts may need to be invoked using
\&\fIperl \-s GLStrGen.pl\fR; however, all the examples assume direct invocation
of command line script works.
.PP
To generate a GPStructures.sdf file containing a structure specified
by a command line \s-1GP\s0 abbreviation, type:
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "PC(16:0/0:0)"
.Ve
.PP
To generate a GPStructures.sdf file containing structures specified
by a command line \s-1GL\s0 abbreviations, type:
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "PC(16:0/0:0)" "PE(18:1(11E)/16:0)"
.Ve
.PP
To generate a GPStructures.sdf file containing structures specified
by a command line \s-1GP\s0 abbreviations with specific stereochemistry, type:
.PP
.Vb 2
\&    % GPStrGen.pl \-r GPStructures \-o "PC(16:0/0:0)[U]"
\&    "PE(18:1(11E)/16:0)[S]"
.Ve
.PP
To enumerate all possible \s-1GP\s0 structures and generate a GPStructures.sdf
file, type:
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "*(*/*)"
.Ve
.PP
or
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "*(*:*/*:*)"
.Ve
.PP
or
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "*(*:*(*)/*:*(*))"
.Ve
.PP
To enumerate all possible \s-1GP\s0 structures with a sn1 chain, and generate a
GPStructures.sdf file, type:
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "*(*/0:0)"
.Ve
.PP
To enumerate all possible \s-1GP\s0 structures with a sn1 chain containing one
double bond, and generate a GPStructures.sdf file, type:
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "*(*:1/0:0)"
.Ve
.PP
To enumerate all possible \s-1GP\s0 structures with even chain length larger than
10 at sn1 position, and generate and generate a GPStructures.sdf file, type:
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "*(*+>10:*/0:0)"
.Ve
.PP
To enumerate all possible \s-1GP\s0 structures with odd chains longer
than 10 at sn1 and even chains longer than 18 at sn2, and generate a
GPStructures.sdf file, type:
.PP
.Vb 1
\&    % GPStrGen.pl \-r GPStructures \-o "*(*\->10:*/*+>18:*)"
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud
.SH "CONTRIBUTOR"
.IX Header "CONTRIBUTOR"
Eoin Fahy
.SH "SEE ALSO"
.IX Header "SEE ALSO"
CLStrGen.pl, FAStrGen.pl, GLStrGen.pl, SPStrGen.pl, STStrGen.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2006\-2012. The Regents of the University of California. All Rights Reserved.
.SH "LICENSE"
.IX Header "LICENSE"
Modified \s-1BSD\s0 License
