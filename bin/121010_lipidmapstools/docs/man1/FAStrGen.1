.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FASTRGEN 1"
.TH FASTRGEN 1 "2012-09-04" "perl v5.10.1" "LipidMAPSTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
FAStrGen.pl \- Generate structures for Fatty Acyls (FA)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
FAStrGen.pl  FAAbbrev|FAAbbrevFileName ...
.PP
FAStrGen.pl [\fB\-h, \-\-help\fR] [\fB\-m, \-\-mode\fR \fIAbbrev | AbbrevFileName\fR]
[\fB\-p, \-\-ProcessMode\fR \fIWriteSDFile | CountOnly\fR] [\fB\-o, \-\-overwrite\fR]
[\fB\-r, \-\-root\fR rootname] [\fB\-w, \-\-workingdir\fR dirname] <arguments>...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate Fatty Acyls (\s-1FA\s0) structures using compound abbreviations specified on
a command line or in a \s-1CSV/TSV\s0 Text file. All the command line arguments represent either
compound abbreviations or file name containing abbreviations. Use mode option to control
the type of command line arguments.
.PP
A \s-1SD\s0 file, containing structures for all \s-1SP\s0 abbreviations along with ontological information, is
generated as an output.
.SH "SUPPORTED ABBREVIATIONS"
.IX Header "SUPPORTED ABBREVIATIONS"
Current support for \s-1FA\s0 structure generation include these main classes and sub classes:
.PP
o Fatty Acids and Conjugates
.PP
.Vb 10
\&    . Straight chain fatty acids
\&    . Methyl branched fatty acids
\&    . Unsaturated fatty acids
\&    . Hydroperoxy fatty acids
\&    . Hydroxy fatty acids
\&    . Oxo fatty acids
\&    . Epoxy fatty acids
\&    . Methoxy fatty acids
\&    . Halogenated fatty acids
\&    . Amino fatty acids
\&    . Cyano fatty acids
\&    . Nitro fatty acids
\&    . Thia fatty acids
.Ve
.PP
o Eicosanoids
.PP
.Vb 1
\&    . Prostaglandins
.Ve
.PP
o Fatty alcohols
.PP
o Fatty aldehydes
.PP
o Fatty  amides
.PP
.Vb 1
\&    . Primary amides
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message
.IP "\fB\-m, \-\-mode\fR \fIAbbrev|AbbrevFileName\fR" 4
.IX Item "-m, --mode Abbrev|AbbrevFileName"
Controls interpretation of command line arguments. Two different methods are provided:
specify compound abbreviations or a file name containing compound abbreviations. Possible
values: \fIAbbrev or AbbrevFileName\fR. Default: \fIAbbrev\fR
.Sp
In \fIAbbrevFileName\fR mode, a single line in \s-1CSV/TSV\s0 files can contain multiple compound
abbreviations. The file extension determines delimiter used to process data lines: comma for
\&\s-1CSV\s0 and tab for \s-1TSV\s0. For files with \s-1TXT\s0 extension, only one compound abbreviation per line
is allowed.
.Sp
Wild card character, *, is also supported in compound abbreviations to generate straight
chain and unsaturated fatty acids.
.Sp
Examples:
.Sp
.Vb 10
\&    Specific structures: "18:0" "20:4(5Z,8Z,11Z,14Z)"
\&                         "28:1(12Z)(2Me,4Me,6Me)"
\&                         "18:3(6Z,9Z,11E)(13OOH[S])"
\&                         "18:2(9E,11E)(13OH)"
\&                         "18:1(10E)(9Ke,10Ep)"
\&                         "16:1(5Z)(2OMe)" "7:1(2Z)(3Br)"
\&                         "18:2(9Z,12Z)(10NO2)" "16:2(10E,12Z)(1OH)"
\&                         "6:0(1CHO)" "12:0(1NH2)"
\&                         "20:2(5Z,13E)(9OH[S],11OH[R],15OH[S]){8a,12b}"
\&    All possibilites: *:* or *
.Ve
.Sp
With wild card character, +/\- can also be used for chain lengths to indicate even and odd lengths;
additionally > and < qualifiers are also allowed to specify length requirements. Examples:
.Sp
.Vb 4
\&    Odd number chains: "*\-:*"
\&    Even number chains: "*+:*"
\&    Odd number chains with chain length longer than 18: "*\->18:*"
\&    Even number chains with chain length longer than 14: "*+>14:*"
.Ve
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files
.IP "\fB\-r, \-\-root\fR \fIrootname\fR" 4
.IX Item "-r, --root rootname"
New file name is generated using the root: <Root>.sdf. Default for new file names: FAAbbrev.sdf,
<AbbrevFilenName>.sdf, or <FirstAbbrevFileName>1To<Count>.sdf.
.IP "\fB\-p, \-\-ProcessMode\fR \fIWriteSDFile|CountOnly\fR" 4
.IX Item "-p, --ProcessMode WriteSDFile|CountOnly"
Specify how abbreviations are processed: generate structures for specified abbreviations along
with generating a \s-1SD\s0 file or just count the number of structures corresponding to specified
abbreviations without generating any \s-1SD\s0 file. Possible values: \fIWriteSDFile or CountOnly\fR.
Default: \fIWriteSDFile\fR.
.Sp
It can take substantial amount of time for generating all the structures and writing out a \s-1SD\s0 file
for abbreviations containing wild cards. \fICountOnly\fR value of \fB\-\-ProcessMode\fR option can
be used to get a quick count of number of structures to be generated without writing out any
\&\s-1SD\s0 file.
.IP "\fB\-w, \-\-workingdir\fR \fIdirname\fR" 4
.IX Item "-w, --workingdir dirname"
Location of working directory. Default: current directory
.SH "EXAMPLES"
.IX Header "EXAMPLES"
On some systems, command line scripts may need to be invoked using
\&\fIperl \-s FAStrGen.pl\fR; however, all the examples assume direct invocation
of command line script works.
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for straight chain fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "18:0" "9:0"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for methyl branched fatty acids, type:
.PP
.Vb 2
\&    % FAStrGen.pl \-r FAStructures \-o "8:0(6Me)" "18:1(6Z)(17Me)"
\&    "28:1(12Z)(2Me,4Me,6Me)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for unsaturated fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "20:4(5Z,8Z,11Z,14Z)" "8:1(5E)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for hydroperoxy fatty acids, type:
.PP
.Vb 2
\&    % FAStrGen.pl \-r FAStructures \-o "18:2(9E,11E)(13OOH)"
\&    "18:3(6Z,9Z,11E)(13OOH[S])"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for hydroxy fatty acids, type:
.PP
.Vb 2
\&    % FAStrGen.pl \-r FAStructures \-o "10:0(10OH)" "15:0(2OH,15OH)"
\&     "18:2(9E,11E)(13OH)" "4:0(3OH[R])"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for oxo fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "10:0(2Ke)" "18:1(10E)(9Ke,10Ep)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for epoxy fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "18:0(6Ep)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for methoxy fatty acids, type:
.PP
.Vb 2
\&    % FAStrGen.pl \-r FAStructures \-o "18:1(9E)(12OH,13OH,11OMe)"
\&    "16:1(5Z)(2OMe)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for halogenated fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "7:1(2Z)(3Br)" "26:2(5Z,9Z)(2Br)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for amino fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "13:0(2NH2[S])" "4:0(2NH2,4CN)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for Cyano fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "4:0(4CN)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for nitro fatty acids, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "18:2(9Z,12Z)(10NO2)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for prostaglanins, type:
.PP
.Vb 2
\&    % FAStrGen.pl \-r FAStructures \-o "20:2(5Z,13E)(9OH[S],11OH[R],
\&    15OH[S]){8a,12b}"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for fatty alcohols, type:
.PP
.Vb 2
\&    % FAStrGen.pl \-r FAStructures \-o "26:0(1OH)" "16:2(10E,12Z)(1OH)"
\&    "11:0(1OH,2Me,2Me,9Me,9Me,10OH)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for fatty aldehydes, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "6:0(1CHO)" "16:2(2E,4E)(1CHO,6OH)"
.Ve
.PP
To generate a FAStructures.sdf file containing a structure specified
by a command line \s-1FA\s0 abbreviation for primary amides, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "12:0(1NH2)"
.Ve
.PP
To enumerate straight chain and unsaturated fatty acids with commonly occuring
chain lengths and generate FAStructures.sdf file, type:
.PP
.Vb 1
\&    % FAStrGen.pl \-r FAStructures \-o "*"
.Ve
.PP
or
.PP
.Vb 1
\&    % FAStrGen.pl \-r SPStructures \-o "*:*"
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud
.SH "CONTRIBUTOR"
.IX Header "CONTRIBUTOR"
Eoin Fahy
.SH "SEE ALSO"
.IX Header "SEE ALSO"
CLStrGen.pl, GLStrGen.pl, GPStrGen.pl, SPStrGen.pl, STStrGen.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2006\-2012. The Regents of the University of California. All Rights Reserved.
.SH "LICENSE"
.IX Header "LICENSE"
Modified \s-1BSD\s0 License
